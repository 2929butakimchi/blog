<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Japan Azure Monitoring &amp; Integration Support Blog</title>
  
  <subtitle>日本マイクロソフトの Azure Monitoring と Integration に関するサポート情報のブログです。</subtitle>
  <link href="https://jpazmon-integ.github.io/blog/atom.xml" rel="self"/>
  
  <link href="https://jpazmon-integ.github.io/blog/"/>
  <updated>2021-07-29T01:07:07.999Z</updated>
  <id>https://jpazmon-integ.github.io/blog/</id>
  
  <author>
    <name>Japan Azure Monitoring &amp; Integration Support Team</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>サービス正常性アラートの設定手順と推奨設定について</title>
    <link href="https://jpazmon-integ.github.io/blog/ame/HowToSetUpServiceHealthAlertsAndRecommendedSettings/"/>
    <id>https://jpazmon-integ.github.io/blog/ame/HowToSetUpServiceHealthAlertsAndRecommendedSettings/</id>
    <published>2021-07-30T15:00:00.000Z</published>
    <updated>2021-07-29T01:07:07.999Z</updated>
    
    <content type="html"><![CDATA[<p>こんにちは、Azure Monitoring &amp; Integration サポート チームの堀です。<br>今回はサービス正常性アラートの設定手順と推奨設定についてご案内いたします。</p><span id="more"></span><h2 id="目次"><a href="#目次" class="headerlink" title="目次"></a>目次</h2><ul><li>サービスの正常性アラートの概要</li><li>サービス正常性アラートの設定手順</li><li>サービス正常性アラートの推奨設定</li></ul><h2 id="サービスの正常性アラートの概要"><a href="#サービスの正常性アラートの概要" class="headerlink" title="サービスの正常性アラートの概要"></a>サービスの正常性アラートの概要</h2><p>サービス正常性アラートでは、お客様環境にてご利用いただいている Azure サービスおよびリージョンを監視対象とし、Azure サービス自体の正常性を監視することが可能です。Azure サービスの障害や、計画メンテナンスの情報を監視でき、イベントが発生した際に、メールや SMS 等の方法で管理者にアラート通知できます。</p><p>サービス正常性アラートにて検知できるイベントの詳細は、下記弊社公開情報をご覧ください。<br>– Service Health の概要<br><a href="https://docs.microsoft.com/ja-jp/azure/service-health/service-health-overview#service-health-events">https://docs.microsoft.com/ja-jp/azure/service-health/service-health-overview#service-health-events</a><br>※ [Service Health のイベント] をご覧ください。</p><h2 id="サービス正常性アラートの設定手順"><a href="#サービス正常性アラートの設定手順" class="headerlink" title="サービス正常性アラートの設定手順"></a>サービス正常性アラートの設定手順</h2><p>以下に、Azure ポータルよりサービス正常性アラートを設定する方法をご案内いたします。</p><ol><li>Azureポータルにログインします。 </li><li>すべてのサービスから [サービス正常性] を開きます。</li><li>左ウィンドウの [アラート] - [正常性アラート] のブレードを開きます。<br><img src="/blog/ame/HowToSetUpServiceHealthAlertsAndRecommendedSettings/Step3.png" alt="Step3"></li><li>画面上部の [サービス正常性アラートの追加] をクリックします。<br><img src="/blog/ame/HowToSetUpServiceHealthAlertsAndRecommendedSettings/Step4.png" alt="Step4"></li><li>[アラート ルールの作成] より、アラートの対象となる [サブスクリプション] 、 [サービス] 、 [リージョン] を選択します。</li><li>監視対象の [イベントの種類] を選択します。</li><li>[アクション グループ] の [アクション グループの選択] をクリックします。任意のアクション グループを指定します。</li><li>[アラートの詳細] より [アラート ルール名] と [説明] を入力します。</li><li>[リソース グループにアラートを保存します] よりアラート ルールを作成する [リソース グループ] を選択します。</li><li>[アラート ルールの作成] をクリックします。 </li></ol><p>手順は以上です。  </p><p>手順の詳細は、下記弊社公開情報をご覧ください。<br>– Azure portal を使用してサービスの通知でアクティビティ ログ アラートを作成する<br><a href="https://docs.microsoft.com/ja-jp/azure/service-health/alerts-activity-log-service-notifications#alert-and-new-action-group-using-azure-portal">https://docs.microsoft.com/ja-jp/azure/service-health/alerts-activity-log-service-notifications#alert-and-new-action-group-using-azure-portal</a></p><h2 id="サービス正常性アラートの推奨設定"><a href="#サービス正常性アラートの推奨設定" class="headerlink" title="サービス正常性アラートの推奨設定"></a>サービス正常性アラートの推奨設定</h2><p>サービス正常性アラート設定時の “サービス” や “リージョン” はすべて選択いただくことを推奨しております。<br>サービス正常性アラートは、ご利用いただいているサービスのご利用いただいているリージョンを対象としたイベントが発生した場合にのみ通知が行われる仕組みです。<br>このため、サブスクリプション上のすべてのサービス、リージョンおよびイベントの種類を選択した場合にも、利用していないリソースに対してアラートは発生いたしません。  </p>]]></content>
    
    
    <summary type="html">&lt;p&gt;こんにちは、Azure Monitoring &amp;amp; Integration サポート チームの堀です。&lt;br&gt;今回はサービス正常性アラートの設定手順と推奨設定についてご案内いたします。&lt;/p&gt;</summary>
    
    
    
    
    <category term="How-To" scheme="https://jpazmon-integ.github.io/blog/tags/How-To/"/>
    
    <category term="Tips" scheme="https://jpazmon-integ.github.io/blog/tags/Tips/"/>
    
    <category term="Azure Monitor Essentials" scheme="https://jpazmon-integ.github.io/blog/tags/Azure-Monitor-Essentials/"/>
    
  </entry>
  
  <entry>
    <title>Azure Automation の実行アカウントの管理方法の tips と FAQ</title>
    <link href="https://jpazmon-integ.github.io/blog/automation/HowToManageRunAsAccount/"/>
    <id>https://jpazmon-integ.github.io/blog/automation/HowToManageRunAsAccount/</id>
    <published>2021-06-25T03:00:00.000Z</published>
    <updated>2021-07-29T01:07:08.003Z</updated>
    
    <content type="html"><![CDATA[<p>こんにちは、Azure Monitoring &amp; Integration サポート チームの伊東です。<br>本日は、Azure Automation の実行アカウントについて、サポート チームによくお問い合わせいただく質問を例に挙げ、実行アカウントをどのように管理していくのか tips をご紹介していきます。</p><span id="more"></span><h2 id="目次"><a href="#目次" class="headerlink" title="目次"></a>目次</h2><ul><li>Azure Automation の実行アカウントとは</li><li>FAQ<ul><li>Q1: 実行アカウントを作成するためにどのような権限が必要ですか？</li><li>Q2: 実行アカウントの有効期限が切れました。どのような影響がありますか？どう対処すれば良いですか？</li><li>Q3: 実行アカウントの更新に失敗します。実行アカウントの有効期限の更新に必要な権限が知りたいです。</li><li>Q4: 実行アカウントの有効期限が 1 年なのですが、より長い期間に設定したいです。</li><li>Q5: 実行アカウントの有効期限が切れる前に通知を行いたいです。</li></ul></li><li>References</li></ul><h2 id="Azure-Automation-の実行アカウントとは"><a href="#Azure-Automation-の実行アカウントとは" class="headerlink" title="Azure Automation の実行アカウントとは"></a>Azure Automation の実行アカウントとは</h2><p>Azure Automation を利用する多くのユーザー様は、Azure への認証に実行アカウントを利用しています。<br>以下のスクリプトでは、実行アカウントを呼び出してAzure にログインし、Get-AzVM で Azure VM の情報を取得しています。<br>既定では、Azure サブスクリプションの共同作成者ロールが実行アカウントに割り当てられているため、VM の起動停止など、Azure リソースの操作を行うことが可能です。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">$connectionName = &quot;AzureRunAsConnection&quot;</span><br><span class="line">$Conn = Get-AutomationConnection -Name $connectionName         </span><br><span class="line"></span><br><span class="line"># Logging in to Azure...</span><br><span class="line">Connect-AzAccount -ServicePrincipal -Tenant $Conn.TenantID -ApplicationId $Conn.ApplicationID -CertificateThumbprint $Conn.CertificateThumbprint</span><br><span class="line"></span><br><span class="line"># Get the info of Azure VMs</span><br><span class="line">Get-AzVM</span><br></pre></td></tr></table></figure><p>本スクリプト内 “Connect-AzAccount” コマンドで -ServicePrincipal オプションを指定していますね。<br>これは、実行アカウントの実態が Azure Active Directory のサービス プリンシパルであるためです。<br>ユーザー アカウントと同様に、サービス プリンシパルに Azure リソースへの権限を割り当てて、リソースへアクセスすることが可能になります。<br>自動化のシナリオなどで、ユーザー アカウントの資格情報を利用する際に不都合などが発生する場合にサービス プリンシパルを使います。</p><p>本題から少し逸れてしまいますので、ここではサービス プリンシパルの詳しい説明を省きます。<br>もっと詳しい情報を知りたい方は以下の公開情報を参考にしてみてください。</p><ul><li>参考<br><a href="https://docs.microsoft.com/ja-jp/azure/active-directory/develop/app-objects-and-service-principals">Azure Active Directory のアプリケーション オブジェクトとサービス プリンシパル オブジェクト</a></li></ul><hr><h2 id="FAQ"><a href="#FAQ" class="headerlink" title="FAQ"></a>FAQ</h2><h3 id="Q1-実行アカウントを作成するためにどのような権限が必要ですか？"><a href="#Q1-実行アカウントを作成するためにどのような権限が必要ですか？" class="headerlink" title="Q1: 実行アカウントを作成するためにどのような権限が必要ですか？"></a>Q1: 実行アカウントを作成するためにどのような権限が必要ですか？</h3><p>実行アカウントを作成するために必要な権限は、ユーザー アカウントの種類および Azure AD の設定により異なります。<br>設定のパターンごとに必要な権限を記載しますので、まずは自分がどのパターンに当てはまるか確認していただき、必要な権限をご確認ください。</p><p> <strong>パターン 1</strong><br>&lt;条件&gt;<br>・ユーザー アカウントの種類: Azure AD の “Member”<br>・[Azure ポータル] - [Azure Active Directory] - [ユーザー設定] - [アプリの登録] が “はい” に設定されている。<br>&lt;必要な権限&gt;<br>・サブスクリプションの “所有者” ロール  </p><p><strong>パターン 2</strong><br>&lt;条件&gt;<br>・ユーザー アカウントの種類: Azure AD の “Member”<br>・[Azure ポータル] - [Azure Active Directory] - [ユーザー設定] - [アプリの登録] が “いいえ” に設定されている。<br>&lt;必要な権限&gt;<br>・サブスクリプションの “所有者” ロール<br>・Azure AD の “アプリケーション管理者” ロール  </p><p><strong>パターン 3</strong><br>&lt;条件&gt;<br>・ユーザー アカウントの種類: Azure AD の “Guest”<br>&lt;必要な権限&gt;<br>・サブスクリプションの “所有者” ロール<br>・Azure AD の “アプリケーション管理者” ロール  </p><h3 id="Q2-実行アカウントの有効期限が切れました。どのような影響がありますか？どう対処すれば良いですか？"><a href="#Q2-実行アカウントの有効期限が切れました。どのような影響がありますか？どう対処すれば良いですか？" class="headerlink" title="Q2: 実行アカウントの有効期限が切れました。どのような影響がありますか？どう対処すれば良いですか？"></a>Q2: 実行アカウントの有効期限が切れました。どのような影響がありますか？どう対処すれば良いですか？</h3><p>実行アカウントの有効期限が切れると、以下のようなエラーでAzure へのログインが失敗します。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">The Run-as certificate might have expired or invalid. Please check &amp; renew the certificate as mentioned here : https://docs.microsoft.com/en-us/azure/automation/manage-runas-account#cert-renewal</span><br><span class="line">Method &#x27;get_SerializationSettings&#x27; in type &#x27;Microsoft.Azure.Management.Internal.Resources.ResourceManagementClient&#x27; from assembly &#x27;Microsoft.Azure.Commands.ResourceManager.Common, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35&#x27; does not have an implementation.</span><br></pre></td></tr></table></figure><p>スクリプトで Azure リソースへの処理を実装していた場合、その処理が失敗することなどが考えられます。<br>そのため、有効期限が切れる前に、以下の手順で実行アカウントの証明書の有効期限を更新する必要があります。<br>実行アカウントの証明書の有効期限は既定では 1 年ですので、更新を忘れないよう注意してください。</p><p><strong>証明書の更新手順</strong></p><ol><li>Azure ポータルにログインします。</li><li>すべてのサービスから [Automation アカウント] を選択し、対象の Automation アカウント名をクリックします。</li><li>[実行アカウント] のブレードを表示し、右側に表示される画面から “Azure 実行アカウント” をクリックします。<br><img src="/blog/automation/HowToManageRunAsAccount/A2Step3.png" alt="A2Step3"></li><li>画面上部から [証明書の更新] - [はい] の順にクリックし、証明書の更新を実行します。<br><img src="/blog/automation/HowToManageRunAsAccount/A2Step4.png" alt="A2Step4"></li></ol><h3 id="Q3-実行アカウントの更新に失敗します。実行アカウントの有効期限の更新に必要な権限が知りたいです。"><a href="#Q3-実行アカウントの更新に失敗します。実行アカウントの有効期限の更新に必要な権限が知りたいです。" class="headerlink" title="Q3: 実行アカウントの更新に失敗します。実行アカウントの有効期限の更新に必要な権限が知りたいです。"></a>Q3: 実行アカウントの更新に失敗します。実行アカウントの有効期限の更新に必要な権限が知りたいです。</h3><p>実行アカウントの更新を行うためには、そのユーザーが十分な権限を有している必要があります。<br>証明書の更新を行うには、以下のどちらからの条件を満たすように権限を割り当ててください。</p><p><strong>条件 1</strong><br>・Azure AD の “アプリケーション管理者” ロール<br>・サブスクリプションの “所有者” ロール  </p><p><strong>条件 2</strong><br>・実行アカウント作成時に作成されるサービス プリンシパルの “所有者”<br>・サブスクリプションの “所有者” ロール  </p><p>※ サービス プリンシパルの所有者の一覧は以下の手順で確認することができます。</p><p><strong>サービス プリンシパルの所有者 確認手順</strong></p><ol><li>Azure ポータルにログインします。</li><li>すべてのサービスから [Automation アカウント] を選択し、対象のアカウント名をクリックします。</li><li>[実行アカウント] のブレードを表示し、右側に表示される画面から “Azure 実行アカウント” をクリックします。</li><li>実行アカウントの詳細な情報が記載された画面が表示されますので、Azure AD アプリケーションの [表示名] をコピーします。<br><img src="/blog/automation/HowToManageRunAsAccount/A3Step4.png" alt="A3Step4"></li><li>次に、すべてのサービスから [Azure AD] を選択します。</li><li>画面左端から [アプリの登録] のブレードを表示します。</li><li>手順 4 にてコピーした “表示名” を検索ボックスに入力します。<br><img src="/blog/automation/HowToManageRunAsAccount/A3Step7.png" alt="A3Step7"></li><li>表示されたアプリケーションをクリックし、[所有者] のブレードを表示します。</li></ol><h3 id="Q4-実行アカウントの有効期限が-1-年なのですが、より長い期間に設定したいです。"><a href="#Q4-実行アカウントの有効期限が-1-年なのですが、より長い期間に設定したいです。" class="headerlink" title="Q4: 実行アカウントの有効期限が 1 年なのですが、より長い期間に設定したいです。"></a>Q4: 実行アカウントの有効期限が 1 年なのですが、より長い期間に設定したいです。</h3><p>Azure ポータルから実行アカウントを作成すると有効期限は既定では 1 年ですが、Azure PowerShell を利用することで任意の有効期限を設定できます。<br>以下の公開情報にて、PowerShell にて実行アカウントを作成する手順をご案内していますので、こちらの手順を実施してください。</p><ul><li>公開情報<br><a href="https://docs.microsoft.com/ja-jp/azure/automation/create-run-as-account#powershell-script-to-create-a-run-as-account">実行アカウントを作成する PowerShell スクリプト</a></li></ul><p>※ 補足<br>以下サンプル コマンドのように SelfSignedCertNoOfMonthsUntilExpired を引数に指定することで有効期限を月単位で指定できます。<br>下記の例の場合には、100 年 (1200 ヶ月) の有効期限をもつ証明書を作成します。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.\Create-RunAsAccount.ps1 -ResourceGroup &lt;Automation アカウントのリソース グループ名&gt; -AutomationAccountName &lt;Automation アカウント名&gt; -SubscriptionId &lt;サブスクリプション ID&gt; -ApplicationDisplayName &lt;実行アカウントの表示名&gt; -SelfSignedCertPlainPassword &lt;任意のパスワード&gt; -CreateClassicRunAsAccount $false -SelfSignedCertNoOfMonthsUntilExpired 1200</span><br></pre></td></tr></table></figure><h3 id="Q5-実行アカウントの有効期限が切れる前に通知を行いたいです。"><a href="#Q5-実行アカウントの有効期限が切れる前に通知を行いたいです。" class="headerlink" title="Q5: 実行アカウントの有効期限が切れる前に通知を行いたいです。"></a>Q5: 実行アカウントの有効期限が切れる前に通知を行いたいです。</h3><p>既定では、証明書の有効期限を検知して通知を行う機能はありません。<br>なお、Get-AzAutomationCertificate コマンドで実行アカウントの証明書の有効期限を取得できます。<br>こちらのコマンドレットを利用して有効期限を取得し、メール通知を行うサンプル スクリプトをご案内します。<br>タスクスケジューラや Azure Automation などの自動化ツールでスクリプトをスケジュール実行するよう設定ください。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"># パラメータ (適宜ご変更ください。)</span><br><span class="line">$RGname=&quot;リソース グループ名&quot;</span><br><span class="line">$AAname=&quot;Automation アカウント名&quot;</span><br><span class="line">$SubscriptionId=&quot;サブスクリプション ID&quot;</span><br><span class="line">$notificationtime=30 #この値より有効期限の残り日数が小さい場合に通知を行う </span><br><span class="line">$automationCertificateName=&quot;証明書の名前&quot; # [Azure ポータル - Autoamtion アカウント - 証明書 - 名前] からご確認ください。 </span><br><span class="line">$mail = @&#123;</span><br><span class="line">    from = &quot;*********@ex***le.com&quot;;</span><br><span class="line">    to = &quot;***@ex***le.com&quot;;</span><br><span class="line">    smtp_server = &quot;smtp.*****.com&quot;;</span><br><span class="line">    smtp_port = ***;</span><br><span class="line">    user = &quot;**************@*****.com&quot;;</span><br><span class="line">    password = &quot;********&quot;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 認証情報生成</span><br><span class="line">$password = ConvertTo-SecureString $mail[&quot;password&quot;] -AsPlainText -Force</span><br><span class="line">$credential = New-Object System.Management.Automation.PSCredential $mail[&quot;user&quot;], $password</span><br><span class="line"></span><br><span class="line"># ログイン</span><br><span class="line">Connect-AzAccount</span><br><span class="line">Select-AzSubscription -SubscriptionId $SubscriptionId</span><br><span class="line"></span><br><span class="line"># 有効期限の取得</span><br><span class="line">$result=Get-AzAutomationCertificate -ResourceGroupName $RGname -AutomationAccountName $AAname | Where-Object&#123;$_.Name -match $automationCertificateName&#125;</span><br><span class="line">$result</span><br><span class="line">if (!$result) &#123;</span><br><span class="line">    # 実行アカウントが見つからなかった場合</span><br><span class="line">    throw &quot;Automation Account に実行アカウントが存在しません。&quot;    </span><br><span class="line">&#125;</span><br><span class="line">$ExpireDate=$result.ExpiryTime.Date</span><br><span class="line"></span><br><span class="line"># 本日の日付を取得</span><br><span class="line">$today=Get-Date</span><br><span class="line"></span><br><span class="line"># 残り日数を計算</span><br><span class="line">$diff=$ExpireDate - $today</span><br><span class="line"></span><br><span class="line">if ($diff.Days -lt 0)&#123;</span><br><span class="line">    # 既に有効期限切れをしていればメールを送信</span><br><span class="line">    Send-MailMessage -To $mail[&quot;to&quot;] `</span><br><span class="line">                 -From $mail[&quot;from&quot;] `</span><br><span class="line">                 -SmtpServer $mail[&quot;smtp_server&quot;] `</span><br><span class="line">                 -Credential $credential `</span><br><span class="line">                 -Port $mail[&quot;smtp_port&quot;] `</span><br><span class="line">                 -Subject &quot;[Urgent] The certificate has already been expired.&quot; `</span><br><span class="line">                 -Body &quot;証明書は既に有効期限が切れています。更新を行ってください。&quot; `</span><br><span class="line">                 -Encoding UTF8 `</span><br><span class="line">                 -UseSsl</span><br><span class="line">&#125; elseif ($notificationtime -gt $diff.Days)&#123;</span><br><span class="line">    # 指定した期間より有効期限が短ければメールを送信</span><br><span class="line">    Send-MailMessage -To $mail[&quot;to&quot;] `</span><br><span class="line">                 -From $mail[&quot;from&quot;] `</span><br><span class="line">                 -SmtpServer $mail[&quot;smtp_server&quot;] `</span><br><span class="line">                 -Credential $credential `</span><br><span class="line">                 -Port $mail[&quot;smtp_port&quot;] `</span><br><span class="line">                 -Subject &quot;[Urgent] The certificate will be expired.&quot; `</span><br><span class="line">                 -Body &quot;証明書の有効期限は残り $($diff.Days) 日です。&quot; `</span><br><span class="line">                 -Encoding UTF8 `</span><br><span class="line">                 -UseSsl</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="alert is-warning"><p class="alert-title">警告</p><p>本サンプル スクリプトは、サンプルとして提供されるものであり、製品の実運用環境で使用されることを前提に提供されるものではありません。</p><p>本サンプルコードおよびそれに関連するあらゆる情報は、「現状のまま」で提供されるものであり、明示・黙示を問わずいかなる保証も付されるものではありません。</p><p>こちらのサンプルを利用される際には、検証環境などで動作を十分にご確認の上、ご利用ください。</p></div><hr><h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><p><a href="https://docs.microsoft.com/ja-jp/azure/automation/create-run-as-account">Azure Automation の実行アカウントを作成する方法</a><br><a href="https://docs.microsoft.com/ja-jp/azure/automation/manage-runas-account">Azure Automation の実行アカウントを管理する</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;こんにちは、Azure Monitoring &amp;amp; Integration サポート チームの伊東です。&lt;br&gt;本日は、Azure Automation の実行アカウントについて、サポート チームによくお問い合わせいただく質問を例に挙げ、実行アカウントをどのように管理していくのか tips をご紹介していきます。&lt;/p&gt;</summary>
    
    
    
    
    <category term="Tips" scheme="https://jpazmon-integ.github.io/blog/tags/Tips/"/>
    
    <category term="Automation" scheme="https://jpazmon-integ.github.io/blog/tags/Automation/"/>
    
    <category term="RunAs Account" scheme="https://jpazmon-integ.github.io/blog/tags/RunAs-Account/"/>
    
    <category term="FAQ" scheme="https://jpazmon-integ.github.io/blog/tags/FAQ/"/>
    
  </entry>
  
  <entry>
    <title>Azure Monitoring &amp; Integration チームの Blog リニューアルのお知らせ</title>
    <link href="https://jpazmon-integ.github.io/blog/general/IntroduceOurBlog/"/>
    <id>https://jpazmon-integ.github.io/blog/general/IntroduceOurBlog/</id>
    <published>2021-06-16T03:00:00.000Z</published>
    <updated>2021-07-29T01:07:08.003Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Blog-リニューアルのお知らせ"><a href="#Blog-リニューアルのお知らせ" class="headerlink" title="Blog リニューアルのお知らせ"></a>Blog リニューアルのお知らせ</h2><p>こんにちは、Azure Monitoring &amp; Integration サポート チームです。<br>この度、Monitoring &amp; Integration サポート チームのブログをリニューアルいたしましたのでお知らせします！</p><span id="more"></span><p>こちらのブログでは、Monitoring や Integration 製品のテクノロジーに関する話題を中心に情報を発信していきます。<br>開発部門などからも多くの公式な公開情報を提供しておりますが、私たちのブログでは、新機能に関してのご紹介だけでなく、日本の多くの Azure ご利用者からサポートの依頼を直接受けているサポート エンジニアという立場から、時には私どもの視点を交えて、皆様のお役に立つ情報をご案内したいと思います。<br>これから本ブログで公開していく情報の一例を以下に記載しました。</p><h3 id="公開する情報の例"><a href="#公開する情報の例" class="headerlink" title="公開する情報の例"></a>公開する情報の例</h3><ul><li>リリースされたばかりの新機能に関する情報</li><li>よくサポート チームにお問い合わせいただく “あるある” な問題への対処方法</li><li>Azure を利用するユーザーの方に是非お伝えしたい情報 </li><li>ある問題についてサポートにお問い合わせいただく際、スムーズに調査を進めるために事前に採取いただきたい情報</li></ul><h3 id="本ブログで扱うテクノロジーの例"><a href="#本ブログで扱うテクノロジーの例" class="headerlink" title="本ブログで扱うテクノロジーの例"></a>本ブログで扱うテクノロジーの例</h3><ul><li>Azure Monitor</li><li>Azure Log Analytics</li><li>Azure Automation</li><li>Azure Application Insights</li><li>Azure Logic Apps</li><li>BizTalk Server</li><li>Host Integration Server</li><li>Microsoft Message Queue (MSMQ) Serve</li></ul><p>これから様々な情報を発信しますので、こちらのブログが皆さまのお役に立てれば幸いです。<br>また、実際のサポート サービスでは、製品動作に関する正式な見解のご提供、そして問題解決のサポートを行っていますので、こちらも併せてよろしくお願いいたします！</p><p>※ これまで公開していたフォーラムは以下のリンクからアクセスできますので、過去の情報はこちらからご確認ください。<br><a href="https://social.technet.microsoft.com/Forums/ja-JP/home?forum=jpama">以前のフォーラム (アーカイブ) はこちら</a></p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;Blog-リニューアルのお知らせ&quot;&gt;&lt;a href=&quot;#Blog-リニューアルのお知らせ&quot; class=&quot;headerlink&quot; title=&quot;Blog リニューアルのお知らせ&quot;&gt;&lt;/a&gt;Blog リニューアルのお知らせ&lt;/h2&gt;&lt;p&gt;こんにちは、Azure Monitoring &amp;amp; Integration サポート チームです。&lt;br&gt;この度、Monitoring &amp;amp; Integration サポート チームのブログをリニューアルいたしましたのでお知らせします！&lt;/p&gt;</summary>
    
    
    
    
    <category term="General" scheme="https://jpazmon-integ.github.io/blog/tags/General/"/>
    
  </entry>
  
  <entry>
    <title>Webhook の実行が ”(404) 見つかりません” で失敗する</title>
    <link href="https://jpazmon-integ.github.io/blog/automation/404ErrorOccurrWhenRunningWebhook/"/>
    <id>https://jpazmon-integ.github.io/blog/automation/404ErrorOccurrWhenRunningWebhook/</id>
    <published>2019-04-02T17:27:00.000Z</published>
    <updated>2021-07-29T01:07:07.999Z</updated>
    
    <content type="html"><![CDATA[<p>こんにちは、Azure サポート チームの世古です。<br>今回は Azure Automation で Webhook を実行する際に記録されるエラー ”(404) 見つかりません” の原因および対処方法についてご案内させていただきます。</p><p>記録されるエラーについては以下の通りです。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ERROR [TID:*] [] System.Net.WebException: リモート サーバーがエラーを返しました: (404) 見つかりません</span><br></pre></td></tr></table></figure><p>上記内容にあります通り、Runbook を実行しようとしたが実行する URL が見つからない為、404 のエラーを記録して、Runbook の実行に失敗します。</p><h1 id="対処方法について"><a href="#対処方法について" class="headerlink" title="対処方法について"></a>対処方法について</h1><p>URL が見つからない要因としては、一般的に Webhook 作成時に指定した URL の有効期限が影響している可能性がございます。<br>その為、まずは同様のエラーで失敗する場合には Webhook の有効期限をご確認ください。<br>有効期限が既に切れている場合には、Runbook で実行する事は出来ませんので、再度 Webhook を再作成くださいますようお願いします。<br>以下確認方法についてご紹介します。</p><p><img src="/blog/automation/404ErrorOccurrWhenRunningWebhook/SpecifyExpireOfWebhook.png" alt="Webhook での有効期限の指定" title="Webhook での有効期限の指定"></p><p><img src="/blog/automation/404ErrorOccurrWhenRunningWebhook/CheckExpirationDateWebhook.png" alt="Webhook の有効期限確認方法" title="Webhook の有効期限確認方法"></p><h1 id="参考-有効期限の指定について"><a href="#参考-有効期限の指定について" class="headerlink" title="参考 有効期限の指定について"></a>参考 有効期限の指定について</h1><p>Webhook で URL を指定して実行するのは簡単で便利ですが、URL の有効期限についてはセキュリティ面の観点でも非常に大事な項目となります。<br>例えば、外部トークンの URL が外部に漏れた場合には、誰でも Runbook が実行出来るようになるためです。<br>詳細は<a href="https://docs.microsoft.com/ja-jp/azure/automation/automation-webhooks">公開情報</a>を確認いただければと存じますが、ただ長期の期間を指定するのではなく、適切な有効期限を指定する事を推奨しております。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;こんにちは、Azure サポート チームの世古です。&lt;br&gt;今回は Azure Automation で Webhook を実行する際に記録されるエラー ”(404) 見つかりません” の原因および対処方法についてご案内させていただきます。&lt;/p&gt;
&lt;p&gt;記録されるエラーに</summary>
      
    
    
    
    
    <category term="Automation" scheme="https://jpazmon-integ.github.io/blog/tags/Automation/"/>
    
    <category term="Troubleshooting" scheme="https://jpazmon-integ.github.io/blog/tags/Troubleshooting/"/>
    
    <category term="Webhook" scheme="https://jpazmon-integ.github.io/blog/tags/Webhook/"/>
    
  </entry>
  
  <entry>
    <title>Runbook の Update-AzureRmVM コマンドが &#39;Vhd&#39; cannot be null. で失敗する</title>
    <link href="https://jpazmon-integ.github.io/blog/automation/update-AzureRmVmCommandFailesWithVhdCannotBeNull/"/>
    <id>https://jpazmon-integ.github.io/blog/automation/update-AzureRmVmCommandFailesWithVhdCannotBeNull/</id>
    <published>2019-04-02T17:26:00.000Z</published>
    <updated>2021-07-29T01:07:08.003Z</updated>
    
    <content type="html"><![CDATA[<p>こんにちは、Windows プラットフォーム サポートの世古です。<br>今回は Azure  Automation の Runbook 実行でよくお問い合わせいただく内容についてご紹介させていただきます。</p><p>Runbook の実行で Update-AzureRmVM が ‘Vhd’ cannot be null. で失敗する事象がございます。<br>この問題は以下の条件で発生します。</p><ul><li>対象の VM が管理ディスクを持つ</li><li>モジュールのバージョンが最新でない</li></ul><p>この問題はモジュールのバージョンを最新に更新いただく事で回避されますので、以下の公開情報の手順を実施下さい。</p><ul><li><a href="https://docs.microsoft.com/ja-jp/azure/automation/automation-update-azure-modules">Azure Automation の Azure PowerShell モジュールを更新する方法</a></li></ul><p>以前の Powershell モジュールにおいては、管理ディスクを操作可能な実装が含まれていなかった為、VM の情報を正常に取得出来なかった為、本問題が発生いたします。その為、モジュールのアップデートをご検討ください。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;こんにちは、Windows プラットフォーム サポートの世古です。&lt;br&gt;今回は Azure  Automation の Runbook 実行でよくお問い合わせいただく内容についてご紹介させていただきます。&lt;/p&gt;
&lt;p&gt;Runbook の実行で Update-AzureR</summary>
      
    
    
    
    
    <category term="Automation" scheme="https://jpazmon-integ.github.io/blog/tags/Automation/"/>
    
    <category term="Troubleshooting" scheme="https://jpazmon-integ.github.io/blog/tags/Troubleshooting/"/>
    
    <category term="Runbook" scheme="https://jpazmon-integ.github.io/blog/tags/Runbook/"/>
    
  </entry>
  
  <entry>
    <title>Azure Automation にて特定期間のジョブの実行時間を取得する</title>
    <link href="https://jpazmon-integ.github.io/blog/automation/gettingExeTimeOfJobForSpecificPeriodAutomation/"/>
    <id>https://jpazmon-integ.github.io/blog/automation/gettingExeTimeOfJobForSpecificPeriodAutomation/</id>
    <published>2019-04-02T17:15:00.000Z</published>
    <updated>2021-07-29T01:07:08.003Z</updated>
    
    <content type="html"><![CDATA[<p>こんにちは Azure サポート チームの村田です。<br>Azure Automation においては昨年価格体系が変更されました</p><p>具体的には以下のように以前の Free、Basic という概念がなくなり、以下のように統合された価格体系となっております。</p><ul><li>以前の価格料金<ul><li>Free - 月あたり 500 分の無料時間が付与され、超過した場合はジョブが実行されなくなります。</li><li>Basic - 従量課金として、0.23円 / 分 で課金が発生します。</li></ul></li><li>変更後の価格体系<ul><li>無償の500分のジョブ実行時間が付与され、超過した分に関しましては、0.23円 / 分 で課金が発生します。</li></ul></li></ul><h2 id="参照情報"><a href="#参照情報" class="headerlink" title="参照情報"></a>参照情報</h2><ul><li>Automation の価格<ul><li><a href="https://azure.microsoft.com/ja-jp/pricing/details/automation/">https://azure.microsoft.com/ja-jp/pricing/details/automation/</a></li></ul></li></ul><p>以前は Basic プランの場合、最初の1分から課金対象となっていましたが、新しいプランでは、必ず 月あたり 500 分の無料ジョブ実行時間がつくのでプラン的にはお得になってますね。</p><p>しかし、この価格体系の変更に伴い、Automation アカウントの画面内から、月のジョブの実行時間の累計を表示する項目が消えてしまいました。</p><p>したがいまして、今どの程度ジョブの実行時間を消費しているのかわからないとご質問をいただく場合がございます。</p><p>そんな場合に備え、今回はローカルから PowerShell を実行する事で、特定の期間のジョブの実行時間を取得するスクリプトをご案内します。</p><p>日別にジョブ実行時間が取得できるため、特定の日時のみジョブの実行時間がとても長い際などには、トラブルシューティングにも便利ですので是非ご利用ください。</p><h3 id="スクリプトの実行環境要件"><a href="#スクリプトの実行環境要件" class="headerlink" title="スクリプトの実行環境要件"></a>スクリプトの実行環境要件</h3><p>Windows 10またはWindows Server 2016でコンピュータを実行している場合は、すでにPowerShell 5以降がインストールされているため、この手順は必要ありません。</p><p>今回の場合、PowerShell のバージョンは 3.0 とのことですので、PowerShellを含むWindows Management Framework（WMF）の最新バージョンに更新する必要がございます。</p><ul><li>WMFの最新バージョンを入手するには、次のURLにアクセスしてください。<ul><li><a href="https://www.microsoft.com/en-us/download/details.aspx?id=54616">https://www.microsoft.com/en-us/download/details.aspx?id=54616</a></li></ul></li><li>WMFとパッケージ管理へのリンクを含むPowerShell Galleryの使用に関する詳細は、下記を参照してください。<ul><li><a href="https://www.powershellgallery.com/">https://www.powershellgallery.com/</a></li></ul></li></ul><h2 id="Azure-RM-モジュールのインストール"><a href="#Azure-RM-モジュールのインストール" class="headerlink" title="Azure RM モジュールのインストール"></a>Azure RM モジュールのインストール</h2><p>AzureからPowerShell経由で情報を照会できるようにするには、Azure Resource Management（AzureRM）モジュールをインストールする必要があります。</p><p>先に進む前に、お使いのコンピュータがパッケージ管理の要件を満たしていることを確認してください。</p><p>AzureRMモジュールをインストールするには、以下の手順に従います。</p><ol><li>[管理者として実行]オプションを使用してPowerShellセッションを開きます。</li><li>Install-Module -Name AzureRM -Force -Verboseと入力し、Enterキーを押します。</li><li>インストールが完了するまで待ち、PowerShellのプロンプトに戻ります。</li><li>モジュールがインストールされたことを確認するために、Get-Module -Name AzureRM -ListAvailableと入力し、Enterキーを押します。</li></ol><h3 id="実行スクリプト"><a href="#実行スクリプト" class="headerlink" title="実行スクリプト"></a>実行スクリプト</h3><p>PowerShell ISE を起動し、以下のスクリプトを貼り付け、期間を指定して実行します。<br>※ブロックが複数にわかれておりますが、すべて一つのスクリプトに記載してください。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">Add-AzureRMAccount | Write-Verbose</span><br><span class="line">#ジョブの実行時間を保存するディレクトリを記載します。</span><br><span class="line">$CSVFile = &quot;c:\temp\automation.csv&quot;</span><br><span class="line">#ジョブの実行時間を取得する期間の開始日時を指定します</span><br><span class="line">$StartTime = &quot;12/01/2017&quot;</span><br><span class="line">#ジョブの実行時間を取得する期間の終了日時を指定します</span><br><span class="line">$EndTime = &quot;12/08/2017&quot;</span><br><span class="line"></span><br><span class="line">#ジョブの実行時間を取得するサブスクリプションID を記載します</span><br><span class="line">$SubscriptionID = &#x27;Subscription ID&#x27;</span><br><span class="line">Set-AzureRmContext -SubscriptionId $SubscriptionID | Write-Verbose</span><br><span class="line"></span><br><span class="line">$UsageInfo = Get-UsageAggregates -ReportedStartTime $StartTime -ReportedEndTime $EndTime -AggregationGranularity Daily -ShowDetails $true</span><br><span class="line"></span><br><span class="line"> Do &#123; </span><br><span class="line">    $UsageInfo.UsageAggregations.Properties | Where-Object &#123;($_.MeterCategory -eq &#x27;Automation&#x27;) -and ($_.MeterName -eq &#x27;Basic Runtime&#x27;)&#125; | `</span><br><span class="line">            Select-Object `</span><br><span class="line">            UsageStartTime, `</span><br><span class="line">            UsageEndTime, `</span><br><span class="line">            @&#123;n=&#x27;SubscriptionId&#x27;;e=&#123;$SubscriptionId&#125;&#125;, `</span><br><span class="line">            MeterCategory, `</span><br><span class="line">            MeterId, `</span><br><span class="line">            MeterName, `</span><br><span class="line">            MeterSubCategory, `</span><br><span class="line">            MeterRegion, `</span><br><span class="line">            Unit, `</span><br><span class="line">            Quantity, `</span><br><span class="line">            @&#123;n=&#x27;Project&#x27;;e=&#123;$_.InfoFields.Project&#125;&#125;, `</span><br><span class="line">            InstanceData `</span><br><span class="line">            | Export-Csv -Append:$true -NoTypeInformation:$true -Path $CSVFile</span><br><span class="line">    if ($UsageInfo.NextLink) </span><br><span class="line">    &#123;</span><br><span class="line">        $ContinuationToken = [System.Web.HttpUtility]::UrlDecode($UsageInfo.NextLink.Split(&quot;=&quot;)[-1])</span><br><span class="line">        $UsageInfo = Get-UsageAggregates -ReportedStartTime $StartTime -ReportedEndTime $EndTime `</span><br><span class="line">                            -AggregationGranularity Daily -ShowDetails $true -ContinuationToken $ContinuationToken</span><br><span class="line">    &#125;</span><br><span class="line">    else</span><br><span class="line">    &#123;</span><br><span class="line">       $ContinuationToken = &quot;&quot; </span><br><span class="line">   &#125;</span><br><span class="line"> &#125; Until (!$ContinuationToken)  </span><br></pre></td></tr></table></figure><p>なお実行時に下図のエラーが発生する場合は System.Web アセンブリがよみこまれていない可能性が高いため、以下のコマンドをローカルの環境にてご実施いただければと存じます。</p><p><img src="/blog/automation/gettingExeTimeOfJobForSpecificPeriodAutomation/ErrorMessage.jpg" alt="エラー画面" title="エラー画面"></p><p><strong>実行していただきたいコマンド</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PS C:\&gt; Add-Type -AssemblyName System.Web</span><br></pre></td></tr></table></figure><p>結果として下図のように日時別のジョブの実行時間が CSV で取得できます。</p><p><img src="/blog/automation/gettingExeTimeOfJobForSpecificPeriodAutomation/CsvCreation.png"></p><p>”Quantity” 欄にて分単位でジョブの実行時間が表示されるのが確認できます。<br>この結果では 9 月で約67分のジョブ実行時間なので無償の範囲内ですね。<br>月別に出力して、管理することで、変遷を確認するなど運用にお役に立てていただければ幸いです。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;こんにちは Azure サポート チームの村田です。&lt;br&gt;Azure Automation においては昨年価格体系が変更されました&lt;/p&gt;
&lt;p&gt;具体的には以下のように以前の Free、Basic という概念がなくなり、以下のように統合された価格体系となっております。&lt;/</summary>
      
    
    
    
    
    <category term="Automation" scheme="https://jpazmon-integ.github.io/blog/tags/Automation/"/>
    
    <category term="Howto" scheme="https://jpazmon-integ.github.io/blog/tags/Howto/"/>
    
    <category term="Runbook" scheme="https://jpazmon-integ.github.io/blog/tags/Runbook/"/>
    
    <category term="Job" scheme="https://jpazmon-integ.github.io/blog/tags/Job/"/>
    
  </entry>
  
</feed>
